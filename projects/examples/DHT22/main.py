from machine import Pinimport machinefrom machine import Timerimport timeimport dht# >>> import dht# >>> import machine# >>> d = dht.DHT22(machine.Pin(4))# Then measure and read their values with:## >>> d.measure()# >>> d.temperature()# >>> d.humidity()# global debug# debug = FalseDHT_1_pin = 4DHT_2_pin = 5tim1 = Timer(-1)tim2 = Timer(-1)global dht_mdht_m = 1temp_pred = 50on = 1off = 0RELAYS = [machine.Pin(i, machine.Pin.OUT, value=off) for i in (12, 13)]def dht_measure():    global dht_m    if dht_m == 1:        dht_m = 2        try:            dHT_1.measure()        except OSError:            print("Couldn't measure")    if dht_m == 2:        dht_m = 1        try:            dHT_2.measure()        except OSError:            print("Couldn't measure")def dht_relay():    # RELAYS[0].value(on)    # RELAYS[1].value(on)    dHT_1_temp = float(dHT_1.temperature()) or 0.0    dHT_2_temp = float(dHT_2.temperature()) or 0.0    dHT_temp_a = []    if dHT_1_temp > 0.0:        dHT_temp_a.append(dHT_1_temp)    if dHT_2_temp > 0.0:        dHT_temp_a.append(dHT_2_temp)    dht_count = len(dHT_temp_a)    if dht_count:        dHT_temp = (float(dHT_1_temp)+float(dHT_2_temp))/dht_count        print("temp avg: %s" % (dHT_temp))        if dHT_temp < temp_pred:            print("Relay on:")            RELAYS[0].value(on)            RELAYS[1].value(on)        if dHT_temp > temp_pred-5:            print("Relay off:")            RELAYS[0].value(off)            RELAYS[1].value(off)    else:        print("Relay off:")        RELAYS[0].value(off)        RELAYS[1].value(off)def run_timer():    tim1.init(period=10000, mode=Timer.PERIODIC, callback=lambda t: dht_measure())    tim2.init(period=15000, mode=Timer.PERIODIC, callback=lambda t: dht_relay())def main():    global dHT_1    global dHT_2    dHT_1 = dht.DHT22(machine.Pin(DHT_1_pin))    dHT_2 = dht.DHT22(machine.Pin(DHT_2_pin))    run_timer()if __name__ == '__main__':    main()